{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import {\n  ComputedFields,\n  defineDocumentType,\n  makeSource\n} from 'contentlayer/source-files';\n\nimport readingTime from 'reading-time';\n\nconst computedFields: ComputedFields = {\n  readingTime: { type: 'json', resolve: (doc) => readingTime(doc.body.raw) },\n  wordCount: {\n    type: 'number',\n    resolve: (doc) => doc.body.raw.split(/\\s+/gu).length\n  },\n  slug: {\n    type: 'string',\n    resolve: (doc) => doc._raw.sourceFileName.replace(/\\.mdx$/, '')\n  }\n};\n\nconst Blog = defineDocumentType(() => ({\n  name: 'Blog',\n  filePathPattern: 'blog/*.mdx',\n  bodyType: 'mdx',\n  fields: {\n    title: { type: 'string', required: true },\n    publishedAt: { type: 'string', required: true },\n    summary: { type: 'string', required: true },\n  },\n  computedFields\n}));\n\nconst OtherPage = defineDocumentType(() => ({\n  name: 'OtherPage',\n  filePathPattern: '*.mdx',\n  bodyType: 'mdx',\n  fields: {\n    title: { type: 'string', required: true }\n  },\n  computedFields\n}));\n\n\nconst contentLayerConfig = makeSource({\n  contentDirPath: 'data',\n  documentTypes: [Blog, OtherPage],\n});\n\nexport default contentLayerConfig;\n"],
  "mappings": ";AAAA;AAAA;AAAA;AAAA;AAMA;AAEA,IAAM,iBAAiC;AAAA,EACrC,aAAa,EAAE,MAAM,QAAQ,SAAS,CAAC,QAAQ,YAAY,IAAI,KAAK;AAAA,EACpE,WAAW;AAAA,IACT,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK,IAAI,MAAM,SAAS;AAAA;AAAA,EAEhD,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK,eAAe,QAAQ,UAAU;AAAA;AAAA;AAIhE,IAAM,OAAO,mBAAmB,MAAO;AAAA,EACrC,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,UAAU;AAAA,EACV,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU;AAAA,IACnC,aAAa,EAAE,MAAM,UAAU,UAAU;AAAA,IACzC,SAAS,EAAE,MAAM,UAAU,UAAU;AAAA;AAAA,EAEvC;AAAA;AAGF,IAAM,YAAY,mBAAmB,MAAO;AAAA,EAC1C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,UAAU;AAAA,EACV,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU;AAAA;AAAA,EAErC;AAAA;AAIF,IAAM,qBAAqB,WAAW;AAAA,EACpC,gBAAgB;AAAA,EAChB,eAAe,CAAC,MAAM;AAAA;AAGxB,IAAO,8BAAQ;",
  "names": []
}
